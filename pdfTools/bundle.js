/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (c = i[4] || 3, u = i[5] === e ? i[3] : i[5], i[4] = 3, i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// 移动端菜单切换\ndocument.getElementById('menu-toggle').addEventListener('click', function () {\n  var mobileMenu = document.getElementById('mobile-menu');\n  if (mobileMenu.style.maxHeight) {\n    mobileMenu.style.maxHeight = null;\n  } else {\n    mobileMenu.style.maxHeight = mobileMenu.scrollHeight + 'px';\n  }\n});\n\n// 平滑滚动\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(function (anchor) {\n  anchor.addEventListener('click', function (e) {\n    e.preventDefault();\n    var target = document.querySelector(this.getAttribute('href'));\n    if (target) {\n      window.scrollTo({\n        top: target.offsetTop - 80,\n        behavior: 'smooth'\n      });\n\n      // 关闭移动端菜单\n      document.getElementById('mobile-menu').style.maxHeight = null;\n    }\n  });\n});\nvar _require = __webpack_require__(/*! ./utils */ \"./src/utils/index.js\"),\n  getTextWidth = _require.getTextWidth;\n\n// 生成PDF功能\nvar _PDFLib = PDFLib,\n  PDFDocument = _PDFLib.PDFDocument,\n  StandardFonts = _PDFLib.StandardFonts,\n  rgb = _PDFLib.rgb,\n  radians = _PDFLib.radians;\nvar fontBytes = '';\ndocument.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n  return _regenerator().w(function (_context) {\n    while (1) switch (_context.n) {\n      case 0:\n        loadFonts();\n      case 1:\n        return _context.a(2);\n    }\n  }, _callee);\n})));\nfunction loadFonts() {\n  return _loadFonts.apply(this, arguments);\n} // 图片预览\nfunction _loadFonts() {\n  _loadFonts = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n    var url;\n    return _regenerator().w(function (_context6) {\n      while (1) switch (_context6.n) {\n        case 0:\n          url = './font/pingfang.ttf';\n          _context6.n = 1;\n          return fetch(url).then(function (res) {\n            return res.arrayBuffer();\n          });\n        case 1:\n          fontBytes = _context6.v;\n        case 2:\n          return _context6.a(2);\n      }\n    }, _callee6);\n  }));\n  return _loadFonts.apply(this, arguments);\n}\nvar pdfImageInput = document.getElementById('pdf-image');\nvar imagePreview = document.getElementById('image-preview');\nvar previewImg = document.getElementById('preview-img');\nvar removeImageBtn = document.getElementById('remove-image');\n\n// 图片上传\npdfImageInput.addEventListener('change', function (e) {\n  var file = e.target.files[0];\n  if (file) {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      previewImg.src = event.target.result;\n      imagePreview.classList.remove('hidden');\n    };\n    reader.readAsDataURL(file);\n  }\n});\n\n// 移除图片\nremoveImageBtn.addEventListener('click', function () {\n  pdfImageInput.value = '';\n  imagePreview.classList.add('hidden');\n});\n\n// 生成PDF\nvar generatePdfBtn = document.getElementById('generate-pdf');\nvar pdfPreview = document.getElementById('pdf-preview');\nvar downloadPdfBtn = document.getElementById('download-pdf');\n\n//  生成PDF\ngeneratePdfBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n  var pdfDoc, page, _page$getSize, width, height, title, content, font, textOptions, lines, currentY, file, arrayBuffer, image, imgWidth, imgHeight, imgX, imgY, pdfBytes, _t, _t2, _t3;\n  return _regenerator().w(function (_context2) {\n    while (1) switch (_context2.n) {\n      case 0:\n        showLoadingModal('正在生成PDF...');\n        _context2.p = 1;\n        _context2.n = 2;\n        return PDFDocument.create();\n      case 2:\n        pdfDoc = _context2.v;\n        pdfDoc.registerFontkit(fontkit);\n        page = pdfDoc.addPage([600, 800]); // 获取页面尺寸\n        _page$getSize = page.getSize(), width = _page$getSize.width, height = _page$getSize.height; // 添加标题\n        title = document.getElementById('pdf-title').value || '无标题文档';\n        content = document.getElementById('pdf-content').value || '这是一个由PDF工具生成的文档。\\n\\n您可以在这里添加您的文本内容。'; // 加载字体\n        _context2.n = 3;\n        return pdfDoc.embedFont(fontBytes);\n      case 3:\n        font = _context2.v;\n        // 添加标题\n        page.drawText(title, {\n          x: 50,\n          y: height - 50,\n          size: 24,\n          font: font,\n          color: rgb(0, 0, 0)\n        });\n\n        // 添加分隔线\n        page.drawLine({\n          start: {\n            x: 50,\n            y: height - 65\n          },\n          end: {\n            x: width - 50,\n            y: height - 65\n          },\n          thickness: 2,\n          color: rgb(0.8, 0.8, 0.8)\n        });\n\n        // 添加内容\n        textOptions = {\n          x: 50,\n          y: height - 100,\n          size: 14,\n          font: font,\n          color: rgb(0, 0, 0),\n          lineHeight: 24,\n          maxWidth: width - 100\n        }; // 分行处理文本\n        lines = content.split('\\n');\n        currentY = textOptions.y;\n        lines.forEach(function (line) {\n          page.drawText(line, _objectSpread(_objectSpread({}, textOptions), {}, {\n            y: currentY\n          }));\n          currentY -= 24;\n        });\n\n        // 添加图片（如果有）\n        if (!(pdfImageInput.files.length > 0)) {\n          _context2.n = 12;\n          break;\n        }\n        file = pdfImageInput.files[0];\n        _context2.n = 4;\n        return file.arrayBuffer();\n      case 4:\n        arrayBuffer = _context2.v;\n        if (!file.type.includes('png')) {\n          _context2.n = 6;\n          break;\n        }\n        _context2.n = 5;\n        return pdfDoc.embedPng(arrayBuffer);\n      case 5:\n        image = _context2.v;\n        _context2.n = 11;\n        break;\n      case 6:\n        if (!(file.type.includes('jpeg') || file.type.includes('jpg'))) {\n          _context2.n = 8;\n          break;\n        }\n        _context2.n = 7;\n        return pdfDoc.embedJpg(arrayBuffer);\n      case 7:\n        image = _context2.v;\n        _context2.n = 11;\n        break;\n      case 8:\n        if (!file.type.includes('gif')) {\n          _context2.n = 11;\n          break;\n        }\n        _t = pdfDoc;\n        _context2.n = 9;\n        return convertGifToPng(arrayBuffer);\n      case 9:\n        _t2 = _context2.v;\n        _context2.n = 10;\n        return _t.embedPng.call(_t, _t2);\n      case 10:\n        image = _context2.v;\n      case 11:\n        if (image) {\n          // 计算图片尺寸（保持宽高比，最大宽度400）\n          imgWidth = Math.min(image.width, 400);\n          imgHeight = imgWidth / image.width * image.height; // 居中放置图片\n          imgX = (width - imgWidth) / 2;\n          imgY = currentY - imgHeight - 20;\n          page.drawImage(image, {\n            x: imgX,\n            y: imgY,\n            width: imgWidth,\n            height: imgHeight\n          });\n        }\n      case 12:\n        _context2.n = 13;\n        return pdfDoc.save();\n      case 13:\n        pdfBytes = _context2.v;\n        // 显示预览\n        displayPdfPreview(pdfBytes, pdfPreview);\n\n        // 启用下载按钮\n        downloadPdfBtn.classList.remove('hidden');\n        downloadPdfBtn.onclick = function () {\n          saveAs(new Blob([pdfBytes], {\n            type: 'application/pdf'\n          }), 'generated-document.pdf');\n        };\n        hideLoadingModal();\n        _context2.n = 15;\n        break;\n      case 14:\n        _context2.p = 14;\n        _t3 = _context2.v;\n        console.error('生成PDF时出错:', _t3);\n        hideLoadingModal();\n        alert('生成PDF时出错: ' + _t3.message);\n      case 15:\n        return _context2.a(2);\n    }\n  }, _callee2, null, [[1, 14]]);\n})));\n\n// 辅助函数：GIF转PNG（取第一帧）\nfunction convertGifToPng(_x) {\n  return _convertGifToPng.apply(this, arguments);\n} // 合并PDF功能\nfunction _convertGifToPng() {\n  _convertGifToPng = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7(gifArrayBuffer) {\n    return _regenerator().w(function (_context7) {\n      while (1) switch (_context7.n) {\n        case 0:\n          return _context7.a(2, gifArrayBuffer);\n      }\n    }, _callee7);\n  }));\n  return _convertGifToPng.apply(this, arguments);\n}\nvar mergeFilesInput = document.getElementById('merge-files');\nvar mergeFileList = document.getElementById('merge-file-list');\nvar fileListContainer = document.getElementById('file-list');\nvar mergePdfsBtn = document.getElementById('merge-pdfs');\nvar mergedPdfPreview = document.getElementById('merged-pdf-preview');\nvar downloadMergedPdfBtn = document.getElementById('download-merged-pdf');\nvar mergeFiles = [];\n\n//  Merge files input\nmergeFilesInput.addEventListener('change', function (e) {\n  var files = Array.from(e.target.files);\n  if (files.length > 0) {\n    mergeFiles = files;\n    updateMergeFileList();\n    fileListContainer.classList.remove('hidden');\n    mergePdfsBtn.classList.remove('opacity-50', 'cursor-not-allowed');\n  }\n});\nfunction updateMergeFileList() {\n  mergeFileList.innerHTML = '';\n  mergeFiles.forEach(function (file, index) {\n    var fileSize = (file.size / (1024 * 1024)).toFixed(2);\n    var li = document.createElement('li');\n    li.className = 'py-3 px-2 flex justify-between items-center';\n    li.innerHTML = \"\\n        <div class=\\\"flex items-center\\\">\\n          <i class=\\\"fa fa-file-pdf-o text-primary mr-3\\\"></i>\\n          <div>\\n            <p class=\\\"font-medium\\\">\".concat(file.name, \"</p>\\n            <p class=\\\"text-sm text-gray-500\\\">\").concat(fileSize, \" MB</p>\\n          </div>\\n        </div>\\n        <div class=\\\"flex items-center space-x-2\\\">\\n          <button data-index=\\\"\").concat(index, \"\\\" class=\\\"move-up-btn text-gray-500 hover:text-primary\\\">\\n            <i class=\\\"fa fa-arrow-up\\\"></i>\\n          </button>\\n          <button data-index=\\\"\").concat(index, \"\\\" class=\\\"move-down-btn text-gray-500 hover:text-primary\\\">\\n            <i class=\\\"fa fa-arrow-down\\\"></i>\\n          </button>\\n          <button data-index=\\\"\").concat(index, \"\\\" class=\\\"remove-file-btn text-red-500 hover:text-red-700\\\">\\n            <i class=\\\"fa fa-times\\\"></i>\\n          </button>\\n        </div>\\n      \");\n    mergeFileList.appendChild(li);\n  });\n\n  // 添加排序和删除事件\n  document.querySelectorAll('.move-up-btn').forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      var index = parseInt(this.getAttribute('data-index'));\n      if (index > 0) {\n        var _ref3 = [mergeFiles[index - 1], mergeFiles[index]];\n        mergeFiles[index] = _ref3[0];\n        mergeFiles[index - 1] = _ref3[1];\n        updateMergeFileList();\n      }\n    });\n  });\n  document.querySelectorAll('.move-down-btn').forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      var index = parseInt(this.getAttribute('data-index'));\n      if (index < mergeFiles.length - 1) {\n        var _ref4 = [mergeFiles[index + 1], mergeFiles[index]];\n        mergeFiles[index] = _ref4[0];\n        mergeFiles[index + 1] = _ref4[1];\n        updateMergeFileList();\n      }\n    });\n  });\n  document.querySelectorAll('.remove-file-btn').forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      var index = parseInt(this.getAttribute('data-index'));\n      mergeFiles.splice(index, 1);\n      if (mergeFiles.length === 0) {\n        fileListContainer.classList.add('hidden');\n        mergePdfsBtn.classList.add('opacity-50', 'cursor-not-allowed');\n      } else {\n        updateMergeFileList();\n      }\n    });\n  });\n}\nmergePdfsBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n  var mergedPdf, _iterator, _step, file, arrayBuffer, pdfDoc, pages, pdfBytes, _t4, _t5;\n  return _regenerator().w(function (_context3) {\n    while (1) switch (_context3.n) {\n      case 0:\n        if (!(mergeFiles.length < 2)) {\n          _context3.n = 1;\n          break;\n        }\n        alert('请至少选择两个PDF文件进行合并');\n        return _context3.a(2);\n      case 1:\n        showLoadingModal('正在合并PDF...');\n        _context3.p = 2;\n        _context3.n = 3;\n        return PDFDocument.create();\n      case 3:\n        mergedPdf = _context3.v;\n        // 逐个合并PDF\n        _iterator = _createForOfIteratorHelper(mergeFiles);\n        _context3.p = 4;\n        _iterator.s();\n      case 5:\n        if ((_step = _iterator.n()).done) {\n          _context3.n = 10;\n          break;\n        }\n        file = _step.value;\n        _context3.n = 6;\n        return file.arrayBuffer();\n      case 6:\n        arrayBuffer = _context3.v;\n        _context3.n = 7;\n        return PDFDocument.load(arrayBuffer);\n      case 7:\n        pdfDoc = _context3.v;\n        _context3.n = 8;\n        return mergedPdf.copyPages(pdfDoc, pdfDoc.getPageIndices());\n      case 8:\n        pages = _context3.v;\n        pages.forEach(function (page) {\n          mergedPdf.addPage(page);\n        });\n      case 9:\n        _context3.n = 5;\n        break;\n      case 10:\n        _context3.n = 12;\n        break;\n      case 11:\n        _context3.p = 11;\n        _t4 = _context3.v;\n        _iterator.e(_t4);\n      case 12:\n        _context3.p = 12;\n        _iterator.f();\n        return _context3.f(12);\n      case 13:\n        _context3.n = 14;\n        return mergedPdf.save();\n      case 14:\n        pdfBytes = _context3.v;\n        // 显示预览\n        displayPdfPreview(pdfBytes, mergedPdfPreview);\n\n        // 启用下载按钮\n        downloadMergedPdfBtn.classList.remove('hidden');\n        downloadMergedPdfBtn.onclick = function () {\n          saveAs(new Blob([pdfBytes], {\n            type: 'application/pdf'\n          }), 'merged-document.pdf');\n        };\n        hideLoadingModal();\n        _context3.n = 16;\n        break;\n      case 15:\n        _context3.p = 15;\n        _t5 = _context3.v;\n        console.error('合并PDF时出错:', _t5);\n        hideLoadingModal();\n        alert('合并PDF时出错: ' + _t5.message);\n      case 16:\n        return _context3.a(2);\n    }\n  }, _callee3, null, [[4, 11, 12, 13], [2, 15]]);\n})));\n\n// 添加水印功能\nvar watermarkFileInput = document.getElementById('watermark-file');\nvar selectWatermarkFileBtn = document.getElementById('select-watermark-file');\nvar watermarkFileInfo = document.getElementById('watermark-file-info');\nvar watermarkFilename = document.getElementById('watermark-filename');\nvar watermarkFilesize = document.getElementById('watermark-filesize');\nvar removeWatermarkFileBtn = document.getElementById('remove-watermark-file');\nvar addWatermarkBtn = document.getElementById('add-watermark');\nvar watermarkedPdfPreview = document.getElementById('watermarked-pdf-preview');\nvar downloadWatermarkedPdfBtn = document.getElementById('download-watermarked-pdf');\n\n// 水印类型切换\nvar textWatermarkBtn = document.getElementById('text-watermark-btn');\nvar imageWatermarkBtn = document.getElementById('image-watermark-btn');\nvar textWatermarkOptions = document.getElementById('text-watermark-options');\nvar imageWatermarkOptions = document.getElementById('image-watermark-options');\ntextWatermarkBtn.addEventListener('click', function () {\n  textWatermarkBtn.classList.add('border-primary', 'bg-primary/10', 'text-primary');\n  textWatermarkBtn.classList.remove('border-gray-300', 'bg-white', 'text-gray-700');\n  imageWatermarkBtn.classList.add('border-gray-300', 'bg-white', 'text-gray-700');\n  imageWatermarkBtn.classList.remove('border-primary', 'bg-primary/10', 'text-primary');\n  textWatermarkOptions.classList.remove('hidden');\n  imageWatermarkOptions.classList.add('hidden');\n});\nimageWatermarkBtn.addEventListener('click', function () {\n  imageWatermarkBtn.classList.add('border-primary', 'bg-primary/10', 'text-primary');\n  imageWatermarkBtn.classList.remove('border-gray-300', 'bg-white', 'text-gray-700');\n  textWatermarkBtn.classList.add('border-gray-300', 'bg-white', 'text-gray-700');\n  textWatermarkBtn.classList.remove('border-primary', 'bg-primary/10', 'text-primary');\n  textWatermarkOptions.classList.add('hidden');\n  imageWatermarkOptions.classList.remove('hidden');\n});\n\n// 水印图片预览\nvar watermarkImageInput = document.getElementById('watermark-image');\nvar watermarkImagePreview = document.getElementById('watermark-image-preview');\nvar watermarkPreviewImg = document.getElementById('watermark-preview-img');\nvar removeWatermarkImageBtn = document.getElementById('remove-watermark-image');\nwatermarkImageInput.addEventListener('change', function (e) {\n  var file = e.target.files[0];\n  if (file) {\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      watermarkPreviewImg.src = event.target.result;\n      watermarkImagePreview.classList.remove('hidden');\n    };\n    reader.readAsDataURL(file);\n  }\n});\nremoveWatermarkImageBtn.addEventListener('click', function () {\n  watermarkImageInput.value = '';\n  watermarkImagePreview.classList.add('hidden');\n});\nselectWatermarkFileBtn.addEventListener('click', function () {\n  watermarkFileInput.click();\n});\nwatermarkFileInput.addEventListener('change', function (e) {\n  var file = e.target.files[0];\n  if (file) {\n    var fileSize = (file.size / (1024 * 1024)).toFixed(2);\n    watermarkFilename.textContent = file.name;\n    watermarkFilesize.textContent = \"\".concat(fileSize, \" MB\");\n    watermarkFileInfo.classList.remove('hidden');\n    addWatermarkBtn.classList.remove('opacity-50', 'cursor-not-allowed');\n  }\n});\nremoveWatermarkFileBtn.addEventListener('click', function () {\n  watermarkFileInput.value = '';\n  watermarkFileInfo.classList.add('hidden');\n  addWatermarkBtn.classList.add('opacity-50', 'cursor-not-allowed');\n});\naddWatermarkBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n  var file, arrayBuffer, pdfDoc, isTextWatermark, pages, text, colorHex, opacity, size, rotation, textWidth, r, g, b, font, watermarkFile, watermarkArrayBuffer, image, pdfBytes, _t6;\n  return _regenerator().w(function (_context4) {\n    while (1) switch (_context4.n) {\n      case 0:\n        if (watermarkFileInput.files.length) {\n          _context4.n = 1;\n          break;\n        }\n        alert('请先选择一个PDF文件');\n        return _context4.a(2);\n      case 1:\n        showLoadingModal('正在添加水印...');\n        _context4.p = 2;\n        file = watermarkFileInput.files[0];\n        _context4.n = 3;\n        return file.arrayBuffer();\n      case 3:\n        arrayBuffer = _context4.v;\n        _context4.n = 4;\n        return PDFDocument.load(arrayBuffer);\n      case 4:\n        pdfDoc = _context4.v;\n        pdfDoc.registerFontkit(fontkit);\n        // 确定水印类型\n        isTextWatermark = textWatermarkBtn.classList.contains('text-primary'); // 获取所有页面\n        pages = pdfDoc.getPages();\n        if (!isTextWatermark) {\n          _context4.n = 6;\n          break;\n        }\n        // 文本水印\n        text = document.getElementById('watermark-text').value || '内部文件 未经授权 禁止传播';\n        colorHex = document.getElementById('watermark-color').value;\n        opacity = parseInt(document.getElementById('watermark-opacity').value) / 100;\n        size = parseInt(document.getElementById('watermark-size').value);\n        rotation = parseInt(document.getElementById('watermark-rotation').value);\n        textWidth = getTextWidth(document.getElementById('watermark-text'));\n        console.log(\"\\u6587\\u672C\\u5BBD\\u5EA6: \".concat(textWidth, \"px\"));\n        // 解析颜色\n        r = parseInt(colorHex.substring(1, 3), 16) / 255;\n        g = parseInt(colorHex.substring(3, 5), 16) / 255;\n        b = parseInt(colorHex.substring(5, 7), 16) / 255; // 加载字体\n        _context4.n = 5;\n        return pdfDoc.embedFont(fontBytes);\n      case 5:\n        font = _context4.v;\n        // 为每个页面添加水印\n        pages.forEach(function (page) {\n          var _page$getSize2 = page.getSize(),\n            width = _page$getSize2.width,\n            height = _page$getSize2.height;\n\n          // 创建水印内容\n          page.drawText(text, {\n            x: width / 2 - textWidth,\n            y: height / 2,\n            size: size,\n            font: font,\n            color: rgb(r, g, b),\n            opacity: opacity,\n            rotate: radians(rotation * Math.PI / 180),\n            textAlign: 'center'\n          });\n        });\n        _context4.n = 14;\n        break;\n      case 6:\n        if (watermarkImageInput.files.length) {\n          _context4.n = 7;\n          break;\n        }\n        alert('请选择水印图片');\n        hideLoadingModal();\n        return _context4.a(2);\n      case 7:\n        watermarkFile = watermarkImageInput.files[0];\n        _context4.n = 8;\n        return watermarkFile.arrayBuffer();\n      case 8:\n        watermarkArrayBuffer = _context4.v;\n        if (!watermarkFile.type.includes('png')) {\n          _context4.n = 10;\n          break;\n        }\n        _context4.n = 9;\n        return pdfDoc.embedPng(watermarkArrayBuffer);\n      case 9:\n        image = _context4.v;\n        _context4.n = 13;\n        break;\n      case 10:\n        if (!(watermarkFile.type.includes('jpeg') || watermarkFile.type.includes('jpg'))) {\n          _context4.n = 12;\n          break;\n        }\n        _context4.n = 11;\n        return pdfDoc.embedJpg(watermarkArrayBuffer);\n      case 11:\n        image = _context4.v;\n        _context4.n = 13;\n        break;\n      case 12:\n        alert('请选择PNG或JPG格式的图片');\n        hideLoadingModal();\n        return _context4.a(2);\n      case 13:\n        // 为每个页面添加水印\n        pages.forEach(function (page) {\n          var _page$getSize3 = page.getSize(),\n            width = _page$getSize3.width,\n            height = _page$getSize3.height;\n\n          // 计算图片尺寸（保持宽高比，最大宽度150）\n          var imgWidth = Math.min(image.width, 150);\n          var imgHeight = imgWidth / image.width * image.height;\n\n          // 居中放置图片\n          var imgX = (width - imgWidth) / 2;\n          var imgY = (height - imgHeight) / 2;\n          page.drawImage(image, {\n            x: imgX,\n            y: imgY,\n            width: imgWidth,\n            height: imgHeight,\n            opacity: 0.5\n          });\n        });\n      case 14:\n        _context4.n = 15;\n        return pdfDoc.save();\n      case 15:\n        pdfBytes = _context4.v;\n        // 显示预览\n        displayPdfPreview(pdfBytes, watermarkedPdfPreview);\n\n        // 启用下载按钮\n        downloadWatermarkedPdfBtn.classList.remove('hidden');\n        downloadWatermarkedPdfBtn.onclick = function () {\n          saveAs(new Blob([pdfBytes], {\n            type: 'application/pdf'\n          }), 'watermarked-document.pdf');\n        };\n        hideLoadingModal();\n        _context4.n = 17;\n        break;\n      case 16:\n        _context4.p = 16;\n        _t6 = _context4.v;\n        console.error('添加水印时出错:', _t6);\n        hideLoadingModal();\n        alert('添加水印时出错: ' + _t6.message);\n      case 17:\n        return _context4.a(2);\n    }\n  }, _callee4, null, [[2, 16]]);\n})));\n\n// 提取页面功能\nvar extractFileInput = document.getElementById('extract-file');\nvar selectExtractFileBtn = document.getElementById('select-extract-file');\nvar extractFileInfo = document.getElementById('extract-file-info');\nvar extractFilename = document.getElementById('extract-filename');\nvar extractFilesize = document.getElementById('extract-filesize');\nvar removeExtractFileBtn = document.getElementById('remove-extract-file');\nvar extractOptions = document.getElementById('extract-options');\nvar extractPagesBtn = document.getElementById('extract-pages');\nvar extractedPdfPreview = document.getElementById('extracted-pdf-preview');\nvar downloadExtractedPdfBtn = document.getElementById('download-extracted-pdf');\n\n// 提取类型选项\nvar extractAllRadio = document.getElementById('extract-all');\nvar extractRangeRadio = document.getElementById('extract-range');\nvar extractSpecificRadio = document.getElementById('extract-specific');\nvar pageRangeOptions = document.getElementById('page-range-options');\nvar specificPagesOptions = document.getElementById('specific-pages-options');\nvar startPageInput = document.getElementById('start-page');\nvar endPageInput = document.getElementById('end-page');\nselectExtractFileBtn.addEventListener('click', function () {\n  extractFileInput.click();\n});\nextractFileInput.addEventListener('change', function (e) {\n  var file = e.target.files[0];\n  if (file) {\n    var fileSize = (file.size / (1024 * 1024)).toFixed(2);\n    extractFilename.textContent = file.name;\n    extractFilesize.textContent = \"\".concat(fileSize, \" MB\");\n    extractFileInfo.classList.remove('hidden');\n    extractOptions.classList.remove('hidden');\n    extractPagesBtn.classList.remove('opacity-50', 'cursor-not-allowed');\n\n    // 尝试获取PDF页数并更新输入框\n    getPdfPageCount(file).then(function (pageCount) {\n      if (pageCount) {\n        endPageInput.max = pageCount;\n        endPageInput.value = pageCount;\n      }\n    });\n  }\n});\nremoveExtractFileBtn.addEventListener('click', function () {\n  extractFileInput.value = '';\n  extractFileInfo.classList.add('hidden');\n  extractOptions.classList.add('hidden');\n  extractPagesBtn.classList.add('opacity-50', 'cursor-not-allowed');\n});\n\n// 监听提取类型变化\nextractAllRadio.addEventListener('change', function () {\n  pageRangeOptions.classList.add('hidden');\n  specificPagesOptions.classList.add('hidden');\n});\nextractRangeRadio.addEventListener('change', function () {\n  pageRangeOptions.classList.remove('hidden');\n  specificPagesOptions.classList.add('hidden');\n});\nextractSpecificRadio.addEventListener('change', function () {\n  pageRangeOptions.classList.add('hidden');\n  specificPagesOptions.classList.remove('hidden');\n});\nextractPagesBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n  var file, arrayBuffer, pdfDoc, extractedPdf, pagesToExtract, startPage, endPage, i, pageNumbers, pages, pdfBytes, _t7;\n  return _regenerator().w(function (_context5) {\n    while (1) switch (_context5.n) {\n      case 0:\n        if (extractFileInput.files.length) {\n          _context5.n = 1;\n          break;\n        }\n        alert('请先选择一个PDF文件');\n        return _context5.a(2);\n      case 1:\n        showLoadingModal('正在提取页面...');\n        _context5.p = 2;\n        file = extractFileInput.files[0];\n        _context5.n = 3;\n        return file.arrayBuffer();\n      case 3:\n        arrayBuffer = _context5.v;\n        _context5.n = 4;\n        return PDFDocument.load(arrayBuffer);\n      case 4:\n        pdfDoc = _context5.v;\n        _context5.n = 5;\n        return PDFDocument.create();\n      case 5:\n        extractedPdf = _context5.v;\n        // 确定要提取的页面\n        pagesToExtract = [];\n        if (!extractAllRadio.checked) {\n          _context5.n = 6;\n          break;\n        }\n        // 提取所有页面\n        pagesToExtract = pdfDoc.getPageIndices();\n        _context5.n = 10;\n        break;\n      case 6:\n        if (!extractRangeRadio.checked) {\n          _context5.n = 8;\n          break;\n        }\n        // 提取页面范围\n        startPage = parseInt(startPageInput.value) - 1; // 转换为0-based索引\n        endPage = parseInt(endPageInput.value) - 1;\n        if (!(startPage < 0 || endPage >= pdfDoc.getPageCount() || startPage > endPage)) {\n          _context5.n = 7;\n          break;\n        }\n        alert('无效的页面范围');\n        hideLoadingModal();\n        return _context5.a(2);\n      case 7:\n        for (i = startPage; i <= endPage; i++) {\n          pagesToExtract.push(i);\n        }\n        _context5.n = 10;\n        break;\n      case 8:\n        if (!extractSpecificRadio.checked) {\n          _context5.n = 10;\n          break;\n        }\n        // 提取特定页面\n        pageNumbers = document.getElementById('specific-pages').value.split(',').map(function (num) {\n          return parseInt(num.trim()) - 1;\n        }) // 转换为0-based索引\n        .filter(function (num) {\n          return !isNaN(num) && num >= 0 && num < pdfDoc.getPageCount();\n        });\n        if (!(pageNumbers.length === 0)) {\n          _context5.n = 9;\n          break;\n        }\n        alert('请输入有效的页码');\n        hideLoadingModal();\n        return _context5.a(2);\n      case 9:\n        pagesToExtract = pageNumbers;\n      case 10:\n        if (!(pagesToExtract.length > 0)) {\n          _context5.n = 13;\n          break;\n        }\n        _context5.n = 11;\n        return extractedPdf.copyPages(pdfDoc, pagesToExtract);\n      case 11:\n        pages = _context5.v;\n        pages.forEach(function (page) {\n          extractedPdf.addPage(page);\n        });\n\n        // 保存PDF\n        _context5.n = 12;\n        return extractedPdf.save();\n      case 12:\n        pdfBytes = _context5.v;\n        // 显示预览\n        displayPdfPreview(pdfBytes, extractedPdfPreview);\n\n        // 启用下载按钮\n        downloadExtractedPdfBtn.classList.remove('hidden');\n        downloadExtractedPdfBtn.onclick = function () {\n          saveAs(new Blob([pdfBytes], {\n            type: 'application/pdf'\n          }), 'extracted-pages.pdf');\n        };\n        _context5.n = 14;\n        break;\n      case 13:\n        alert('没有选择要提取的页面');\n      case 14:\n        hideLoadingModal();\n        _context5.n = 16;\n        break;\n      case 15:\n        _context5.p = 15;\n        _t7 = _context5.v;\n        console.error('提取页面时出错:', _t7);\n        hideLoadingModal();\n        alert('提取页面时出错: ' + _t7.message);\n      case 16:\n        return _context5.a(2);\n    }\n  }, _callee5, null, [[2, 15]]);\n})));\n\n// 辅助函数：获取PDF页数\nfunction getPdfPageCount(_x2) {\n  return _getPdfPageCount.apply(this, arguments);\n} // 显示PDF预览\nfunction _getPdfPageCount() {\n  _getPdfPageCount = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(file) {\n    var arrayBuffer, pdfDoc, _t8;\n    return _regenerator().w(function (_context8) {\n      while (1) switch (_context8.n) {\n        case 0:\n          _context8.p = 0;\n          _context8.n = 1;\n          return file.arrayBuffer();\n        case 1:\n          arrayBuffer = _context8.v;\n          _context8.n = 2;\n          return PDFDocument.load(arrayBuffer);\n        case 2:\n          pdfDoc = _context8.v;\n          return _context8.a(2, pdfDoc.getPageCount());\n        case 3:\n          _context8.p = 3;\n          _t8 = _context8.v;\n          console.error('获取PDF页数时出错:', _t8);\n          return _context8.a(2, null);\n      }\n    }, _callee8, null, [[0, 3]]);\n  }));\n  return _getPdfPageCount.apply(this, arguments);\n}\nfunction displayPdfPreview(pdfBytes, container) {\n  // 清除现有内容\n  container.innerHTML = '';\n\n  // 创建一个临时URL\n  var pdfUrl = URL.createObjectURL(new Blob([pdfBytes], {\n    type: 'application/pdf'\n  }));\n\n  // 创建iframe显示PDF\n  var iframe = document.createElement('iframe');\n  iframe.src = pdfUrl;\n  iframe.width = '100%';\n  iframe.height = '100%';\n  iframe.style.border = 'none';\n  container.appendChild(iframe);\n\n  // 释放临时URL\n  setTimeout(function () {\n    URL.revokeObjectURL(pdfUrl);\n  }, 30000); // 30秒后释放\n}\n\n// 加载模态框控制\nfunction showLoadingModal(message) {\n  var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '请稍候，这可能需要几秒钟时间';\n  var loadingModal = document.getElementById('loading-modal');\n  var loadingMessage = document.getElementById('loading-message');\n  var loadingDetails = document.getElementById('loading-details');\n  loadingMessage.textContent = message;\n  loadingDetails.textContent = details;\n  loadingModal.classList.remove('hidden');\n}\nfunction hideLoadingModal() {\n  var loadingModal = document.getElementById('loading-modal');\n  loadingModal.classList.add('hidden');\n}\n\n// 页面滚动时导航栏样式变化\nwindow.addEventListener('scroll', function () {\n  var header = document.querySelector('header');\n  if (window.scrollY > 10) {\n    header.classList.add('py-2', 'shadow-lg');\n    header.classList.remove('py-3', 'shadow-md');\n  } else {\n    header.classList.add('py-3', 'shadow-md');\n    header.classList.remove('py-2', 'shadow-lg');\n  }\n});\n\n//# sourceURL=webpack://pdfmarktool/./src/index.js?");

/***/ }),

/***/ "./src/utils/index.js":
/*!****************************!*\
  !*** ./src/utils/index.js ***!
  \****************************/
/***/ ((module) => {

eval("function getTextWidth(inputElement) {\n  // 创建一个临时的span元素\n  var span = document.createElement('span');\n\n  // 复制输入框的样式到span\n  var style = window.getComputedStyle(inputElement);\n  span.style.font = style.font;\n  span.style.letterSpacing = style.letterSpacing;\n  span.style.whiteSpace = 'nowrap'; // 防止文本换行\n\n  // 将span添加到DOM中，但不可见\n  span.style.visibility = 'hidden';\n  span.style.position = 'absolute';\n  document.body.appendChild(span);\n\n  // 设置span的文本内容并测量宽度\n  span.textContent = inputElement.value;\n  var width = span.getBoundingClientRect().width;\n\n  // 移除临时元素\n  document.body.removeChild(span);\n  return width;\n}\nmodule.exports = {\n  getTextWidth: getTextWidth\n};\n\n//# sourceURL=webpack://pdfmarktool/./src/utils/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;