{"version":3,"sources":["pages/recorder.tsx","pages/capture.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FILE_SLIPT","STEP","basicOptions","mimeType","Recorder","stream","controls","setControls","useState","isStart","isPause","startTimesRef","useRef","basicRecordMedia","MediaRecorder","recordList","start","_basicRecordMedia$cur","console","time","startRecord","recorder","log","current","length","_recorder","tempRecord","shift","requestData","chunks","ondataavailable","e","push","data","onstop","stop","_basicRecordMedia$cur2","timeEnd","forEach","item","_item$recorder","pre","setTimeout","download","_recordList$current","_recordList$current$","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","body","appendChild","style","href","click","window","revokeObjectURL","init","useEffect","_jsx","children","_jsxs","className","Button","onClick","color","fill","Space","block","direction","justify","resume","_basicRecordMedia$cur4","_item$recorder3","pause","_basicRecordMedia$cur3","_item$recorder2","isTypeSupported","videoBitsPerSecond","error","CaptureMedia","constructor","constraints","videoRef","audio","video","facingMode","this","setVideoRef","getMedia","navigator","mediaDevices","getUserMedia","catch","err","displayInHtml","getStream","startCamera","startScreen","getDisplayMedia","_this$videoRef","srcObject","takeSnap","canvasRef","ImageCapture","getVideoTracks","grabFrame","then","img","canvas","ctx","getContext","width","height","widthStr","heightStr","getComputedStyle","Number","split","clearRect","drawImage","changeDevices","close","_this$stream","getTracks","track","_this$stream2","removeTrack","kind","Capture","myVideoRef","isBegin","setIsBeginTakeCamera","capture","setStream","padding","src","autoPlay","ref","async","size","App","VConsole","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad4fab86.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Space } from \"antd-mobile\";\nimport \"./recorder.css\";\nconst FILE_SLIPT = 10;\nconst STEP = 3000 / FILE_SLIPT;\nlet basicOptions: {\n  mimeType: string;\n  videoBitsPerSecond?: number;\n} = { mimeType: \"video/x-matroska\" }; // 设置编码格式\nif (MediaRecorder.isTypeSupported(\"video/mp4\")) {\n  basicOptions = { mimeType: \"video/mp4\", videoBitsPerSecond: 100000 };\n} else if (MediaRecorder.isTypeSupported(\"video/x-matroska\")) {\n  basicOptions = { mimeType: \"video/x-matroska\" };\n} else if (MediaRecorder.isTypeSupported(\"video/webm; codecs=vp9\")) {\n  basicOptions = { mimeType: \"video/webm; codecs=vp9\" };\n} else if (MediaRecorder.isTypeSupported(\"video/webm\")) {\n  basicOptions = { mimeType: \"video/webm\" };\n} else {\n  console.error(\"no suitable mimetype found for this device\");\n}\nexport default function Recorder({ stream }: { stream: MediaStream }) {\n  // const videoRef = useRef<HTMLVideoElement>(null);\n\n  const [controls, setControls] = useState<{\n    isStart: boolean;\n    isPause: boolean;\n  }>({\n    isStart: false,\n    isPause: false,\n  });\n  const startTimesRef = useRef<number>(0);\n\n  const basicRecordMedia = useRef<MediaRecorder>(\n    new MediaRecorder(stream, basicOptions)\n  );\n  const recordList = useRef<\n    Array<{\n      chunks: Blob[];\n      recorder: MediaRecorder;\n    }>\n  >([]);\n\n  const download = () => {\n    const chunks = recordList?.current?.[0]?.chunks;\n\n    if (!chunks) {\n      console.log(\"no data...\");\n      return;\n    }\n    var blob = new Blob(chunks, { type: \"video/x-matroska\" });\n    var url = URL.createObjectURL(blob);\n    var a: any = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style = \"display: none\";\n    a.href = url;\n    a.download = \"video.mp4\";\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const start = () => {\n    console.time();\n    var startRecord = () => {\n      let recorder;\n      console.log(\"正在录制。。。\");\n      if (controls.isStart && recordList?.current.length >= 1) {\n        return;\n      }\n      if (recordList?.current.length >= 5) {\n        const tempRecord = recordList?.current.shift();\n        recorder = tempRecord?.recorder;\n        recorder?.requestData();\n        tempRecord && (tempRecord.chunks = []);\n      } else {\n        recorder = new MediaRecorder(stream, basicOptions);\n        recorder.start();\n      }\n      if (!recorder) return;\n      const chunks: Blob[] = [];\n\n      recorder.ondataavailable = (e: any) => {\n        chunks.push(e.data);\n      };\n\n      recorder.onstop = (e: any) => {};\n      recordList?.current.push({\n        recorder,\n        chunks,\n      });\n    };\n    basicRecordMedia?.current?.start(FILE_SLIPT);\n    basicRecordMedia.current.onstop = (e: any) => {};\n    basicRecordMedia.current.ondataavailable = (e: any) => {\n      startTimesRef.current++;\n      if (startTimesRef.current < STEP) {\n        startRecord();\n        startTimesRef.current = startTimesRef.current + STEP;\n      }\n      if (startTimesRef.current % STEP === 0) {\n        startRecord();\n      }\n    };\n    //  setControls((pre) => ({ ...pre, isStart: true }));\n  };\n  const stop = () => {\n    console.log(\"结束录制。。。\");\n    console.timeEnd();\n\n    recordList?.current.forEach((item) => {\n      item?.recorder && item?.recorder?.stop();\n      //   item?.chunks && (item.chunks = []);\n    });\n    basicRecordMedia?.current?.stop();\n    //  // 开始下载\n    // handle.download();\n    setControls((pre) => ({ ...pre, isStart: false }));\n    setTimeout(() => {\n      download();\n      init();\n    }, 1000);\n  };\n  const pause = () => {\n    recordList?.current.forEach((item) => {\n      item?.recorder && item?.recorder?.pause();\n    });\n    basicRecordMedia?.current?.pause();\n\n    setControls((pre) => ({ ...pre, isPause: true }));\n  };\n  const resume = () => {\n    recordList?.current.forEach((item) => {\n      item?.recorder && item?.recorder?.resume();\n    });\n    basicRecordMedia?.current?.resume();\n    setControls((pre) => ({ ...pre, isPause: false }));\n  };\n  const init = () => {\n    recordList.current = [];\n    startTimesRef.current = 0;\n    start();\n  };\n\n  useEffect(() => {\n    start();\n  }, []);\n  // function buttonHandle(e: React.MouseEvent<HTMLElement, MouseEvent>) {\n  //   const { className } = e.target as HTMLElement;\n  //   if (className in handle) {\n  //     // @ts-ignore\n  //     handle[className]();\n  //   }\n  // }\n  return (\n    <div>\n      <div className=\"footer\">\n        {!controls?.isStart ? (\n          <Button\n            onClick={() => {\n              setControls((pre) => ({ ...pre, isStart: true }));\n            }}\n            color=\"primary\"\n            fill=\"outline\"\n          >\n            开始录制\n          </Button>\n        ) : null}\n        {controls?.isStart ? (\n          <Space block direction=\"horizontal\" justify=\"around\">\n            <Button\n              onClick={() => {\n                stop();\n              }}\n              color=\"danger\"\n            >\n              停止并保存\n            </Button>\n            {!controls?.isPause ? (\n              <Button onClick={pause} color=\"warning\">\n                暂停\n              </Button>\n            ) : (\n              <Button onClick={resume} color=\"primary\" fill=\"outline\">\n                继续\n              </Button>\n            )}\n          </Space>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport DeviceSelect, { CurrentMediaType } from \"./device-select\";\nimport Recorder from \"./recorder\";\n\nimport \"./capture.css\";\nimport { Button, Space } from \"antd-mobile\";\nclass CaptureMedia {\n  // 存放媒体约束条件\n  private constraints: MediaStreamConstraints = {\n    audio: true,\n    video: { facingMode: \"environment\" },\n  };\n  // 存放媒体流\n  private stream: MediaStream | null;\n\n  // 视频元素,\n  private videoRef: React.RefObject<HTMLVideoElement> | undefined;\n\n  constructor(\n    constraints?: MediaStreamConstraints,\n    videoRef?: React.RefObject<HTMLVideoElement>\n  ) {\n    this.constraints = constraints ?? this.constraints;\n    this.stream = null;\n    this.videoRef = videoRef;\n  }\n\n  setVideoRef(videoRef?: React.RefObject<HTMLVideoElement>) {\n    this.videoRef = videoRef;\n  }\n\n  // 获取媒体流,并在videoRef引用元素上播放\n  async getMedia() {\n    this.stream = await navigator.mediaDevices\n      .getUserMedia(this.constraints)\n      .catch((err) => {\n        console.error(err);\n        // 将异常继续抛出\n        throw err;\n      });\n    this.displayInHtml();\n  }\n  getStream() {\n    return this.stream;\n  }\n  // 调用摄像头\n  async startCamera() {\n    //  当出现错误时 this.stream 的值是 catch 中返回的,没有显示返回则是 void\n    await this.getMedia();\n  }\n\n  // 分享屏幕\n  async startScreen() {\n    //  当出现错误时 this.stream 的值是 catch 中返回的,没有显示返回则是 void\n    this.stream = await navigator.mediaDevices\n      // @ts-ignore\n      .getDisplayMedia(this.constraints)\n      .catch((err: Error) => {\n        console.error(err);\n        // 将异常继续抛出\n        throw err;\n      });\n\n    this.displayInHtml();\n  }\n\n  // 播放媒体流\n  displayInHtml() {\n    if (this.videoRef?.current) {\n      this.videoRef.current.srcObject = this.stream;\n    }\n  }\n\n  // 截图, 将视频流的当前帧显示到canvas中\n  takeSnap(canvasRef: React.RefObject<HTMLCanvasElement>) {\n    if (!this.stream) {\n      return;\n    }\n    const imageCapture = new ImageCapture(this.stream.getVideoTracks()[0]);\n    imageCapture.grabFrame().then((img: ImageBitmap) => {\n      const canvas = canvasRef.current;\n      if (canvas !== null) {\n        const ctx = canvas.getContext(\"2d\");\n        let width;\n        let height;\n        {\n          const { width: widthStr, height: heightStr } =\n            getComputedStyle(canvas);\n          width = Number(widthStr.split(\"px\")[0]);\n          height = Number(heightStr.split(\"px\")[0]);\n        }\n\n        ctx && ctx.clearRect(0, 0, width, height);\n        ctx && ctx.drawImage(img, 0, 0, width, height);\n      }\n    });\n  }\n\n  // 更改设备\n  changeDevices(constraints: MediaStreamConstraints) {\n    this.close();\n    this.constraints = constraints;\n\n    this.getMedia();\n  }\n\n  close() {\n    console.log(this.stream);\n    this.stream?.getTracks().forEach((track) => {\n      track.stop();\n      this.stream?.removeTrack(track);\n      console.log(`remove ${track.kind}`);\n    });\n  }\n}\n\nexport default function Capture() {\n  const myVideoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isBegin, setIsBeginTakeCamera] = useState<boolean>(false);\n  const [capture] = useState<CaptureMedia>(\n    new CaptureMedia({ audio: true, video: true }, myVideoRef)\n  );\n\n  const [stream, setStream] = useState<MediaStream | null>(capture.getStream());\n  const changeDevice = ({ videoinput, audioinput }: CurrentMediaType) => {\n    // @TODO 构造 TrackConstraints 传入capture.applyConstraints\n    console.log(videoinput);\n    capture.changeDevices({\n      video: { deviceId: videoinput.deviceId },\n      audio: { deviceId: audioinput.deviceId },\n    });\n  };\n\n  async function getMedia(type: \"camera\" | \"screen\") {\n    switch (type) {\n      case \"camera\": {\n        await capture.startCamera();\n        break;\n      }\n      case \"screen\": {\n        await capture.startScreen();\n        break;\n      }\n    }\n    setStream(capture.getStream());\n  }\n\n  // useEffect(()=>{\n  //   getMedia('camera');\n  // }, []);\n\n  return (\n    <div style={{ padding: isBegin ? 0:20}}>\n      {/* <DeviceSelect onChangeDevice={changeDevice} /> */}\n      <section>\n        {!isBegin ? (\n          <section>\n            <h4>运动相机v1.0版 使用说明：</h4>\n            <Space direction=\"vertical\">\n              <p>1、我们高度尊重用户隐私，所有数据均保存在用户手机上，平台不会采集用户信息</p>\n              <p>\n                2、相机会采用运动相机的模式，当你点击拍摄之后，会预录制点击拍摄前一段时间的视频\n              </p>\n              <p>3、为了保证性能，当前最长支持预录15秒的视频（后续会根据用户反馈进行扩展）</p>\n              <p>\n                4、点击停止拍摄会提供录制视频的下载，该过程不会产生流量消耗，录制完请及时保存，避免数据丢失\n              </p>\n            </Space>\n          </section>\n        ) : (\n          <video  width=\"640\" height=\"480\" src=\"#\" autoPlay ref={myVideoRef}></video>\n        )}\n      </section>\n     \n      <div className=\"footer\" >\n        { !isBegin ? <Button\n          onClick={() => {\n            setIsBeginTakeCamera(true);\n            getMedia(\"camera\");\n          }}\n          block\n          color=\"primary\"\n          size=\"large\"\n        >\n          我知道了\n        </Button> : null }\n\n        {/* <button onClick={() => capture.close()}>停止录制</button> */}\n      </div>\n\n      {stream !== null && <Recorder stream={stream} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Capture from \"./pages/capture\";\nimport VConsole from 'vconsole'\n\nfunction App() {\n  let vConsole = new VConsole();\n  console.log(\"test\");\n  return (\n    <div className=\"App\">\n      <Capture />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}